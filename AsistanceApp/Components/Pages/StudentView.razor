@page "/student/{Id}"
@using System.IO
@using Microsoft.Extensions.Logging
@inject ILogger<StudentView> Logger
<h3>@_choiceStudent?.GetName()</h3>
<div class="d-flex justify-content-between">
    <p><span class="fw-bold">Address:</span> @_choiceStudent?.GetAddress() </p>
    <p><span class="fw-bold">Phone Number:</span> @_choiceStudent?.GetPhoneNumber()</p>
</div>
<div class="d-flex justify-content-between">
    <p><span class="fw-bold">Gender:</span> @_choiceStudent?.GetGender()</p>
    <p><span class="fw-bold">Age:</span> @_choiceStudent?.GetAge()</p>
</div>
<div class="d-flex justify-content-between">
    <h4>Asistances</h4>
    <button @onclick="OnClickRegisterAsistance"  class="btn btn-primary">Add Asistance</button>
</div>
<table class="table">
    <thead>
        <tr>
            <th>Course ID</th>
            <th>Course Name</th>
            <th>Teacher</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>
        @if(_choiceStudent.GetAsistances().Count == 0)
        {
            <tr>The student doesn't have asistances</tr>
        }else{
            foreach (Asistance asistance in _choiceStudent.GetAsistances())
            {
                <tr>
                    <td>@asistance.GetCourse().GetId()</td>
                    <td>@asistance.GetCourse().GetName()</td>
                    <td>@asistance.GetCourse().GetTeacher()</td>
                    <td>@asistance.GetTime()</td>
                </tr>
            }
        }
        
    </tbody>
</table>


@code {
    [Parameter]
    public string? Id{ get; set; }
    private AppManager _app;
    private Student? _choiceStudent;

    public StudentView()
    {
        _app = new AppManager();
        _choiceStudent = new Student();

    }
    protected override async Task OnInitializedAsync()
    {
        _choiceStudent = await _app.FindStudentById(Id);

    }
    private void OnClickRegisterAsistance()
    {
        
    }



}
